trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

services:
  postgres:
    image: postgres:latest
    options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    ports:
      - 5432:5432
    env:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bank_simulator

variables:
  goVersion: '1.21.0' # Go version

steps:
  - task: GoTool@0
    inputs:
      version: $(goVersion)

  - script: |
      echo "Check Go version"
      go version
    displayName: 'Go version'

  - script: |
      echo "Fetch Dependencies"
      go mod download
    displayName: 'Fetch dependencies'

  - script: |
      echo "Install golang-migrate"
      curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
      sudo mv migrate /usr/local/bin/migrate
    displayName: 'Install golang-migrate'

  - script: |
      echo "Run Migrations"
      migrate -path db/migration -database postgres://root:password@localhost:5432/bank_simulator?sslmode=disable -verbose up
    displayName: 'Run migrations'

  - script: |
      echo "Build"
      go build -v ./...
    displayName: 'Build'

  - task: CopyFiles@2
    inputs:
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  - script: |
      echo "Run Tests"
      go test -v ./...
    displayName: 'Run tests'
